const visual6502 = require('./visual6502')
const util = require('node:util');


process.stdout.write('\n# this file was auto-generated by generatechipdefs.js\n\n');


// segdefs
process.stdout.write('\n# segdefs\n');
process.stdout.write('#   0  - wire number\n');
process.stdout.write('#   1  - 0 (pull down), 1 (pull up)\n');
process.stdout.write('#   2  - ignored\n');
process.stdout.write('#   3+ - segments\n');
process.stdout.write('var segdefs = [\n');

// get the maximum segment length in the list
var maxlen = 0;
for (var i in all.segdefs) {
    var seg = all.segdefs[i];
    if(seg.length > maxlen) {
        maxlen = seg.length;
    }
}

for (var i in all.segdefs) {
    var seg = all.segdefs[i];

    // convert the pull up/pull down to a numeric value
    if (seg[1] == '+') {
        seg[1] = 1;
    }
    if (seg[1] == '-') {
        seg[1] = 0;
    }

    // to keep the array size fixed, fill in the missing elements with a -1 value
    while (seg.length < maxlen) {
        seg.push(-1)
    }

    process.stdout.write('    [');
    for (var l in seg) {
        process.stdout.write(seg[l].toString().padStart(2, ' '));
        if (!(l == seg.length-1)) {
            process.stdout.write(', ')
        }
    }
    process.stdout.write('],\n');
}
process.stdout.write(']\n');


// transdefs
process.stdout.write('\n# transdefs\n');
process.stdout.write('#   0 - id\n');
process.stdout.write('#   1 - gate\n');
process.stdout.write('#   2 - c1\n');
process.stdout.write('#   3 - c2\n');
process.stdout.write('var transdefs = [\n');
for (var i in all.transdefs) {
    var trans = all.transdefs[i];
    var outputArray = new Array(4)
    outputArray[0] = trans[0].substring(1)
    outputArray[1] = trans[1]
    outputArray[2] = trans[2]
    outputArray[3] = trans[3]

    // process.stdout.write('    [' + outputArray + '],\n');
    process.stdout.write('    [');
    for (var l in outputArray) {
        process.stdout.write(outputArray[l].toString().padStart(4, ' '));
        if (!(l == outputArray.length-1)) {
            process.stdout.write(', ')
        }
    }
    process.stdout.write('],\n');
}
process.stdout.write(']\n');
